package gui;

import javax.swing.ImageIcon;

/**
 *
 * @author Misa
 * @version {@value qrmanager.QRManager#VERSION}
 */
public class FMHelp extends javax.swing.JFrame {

    /**
     * Creates new form FMHelp
     */
    public FMHelp() {
        initComponents();
        setIconImage(new ImageIcon("resource/qr.jpg").getImage());
        setLocationRelativeTo(null);
        setResizable(false);
        jTextPane1.setBackground(this.getContentPane().getBackground());
        jTextPane1.setText("\t\tQR Manager\nQR Manager is an application that enables reading text from QR code"
                + "and creating QR code for desired text. You can also select dimensions"
                + "of your QR code and choose one out of four supported file extensions"
                + "(png, jpg, jpeg or gif)."
                + "\n\n\t\tUsing QR Manager\nFirst you can choose in the menu whether you want to read or write"
                + "QR code. If you select to read, you will have to choose a QR code from"
                + "your memory drive and its text will be written in the text area of the main"
                + "window. On the other hand, if you select creating QR code option, you"
                + "have to select save location and name your future QR code. Then, on"
                + "the main window, new panel with creating options will be shown. Creating"
                + "options include: QR code dimensions (default value 200, i.e. 200x200, has"
                + "to be square and file extension (default value \"png\"). After you adjust"
                + "theese values, you should click on the \"Generate QR code\" button. When"
                + "you do this, another button will emerge. This button gives you preview of"
                + "your QR code. If you select \"Reset values\" menu option, dimesnions will "
                + "be reset back to default (200), and extension will be reset back to \"png\".");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QR Manager - Help");

        jTextPane1.setEditable(false);
        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
